echo $0
cd $(dirname $0)
if test -f test.db
then
    rm test.db
fi
sqlite3 test.db <<SQL
CREATE TABLE PROCESS_IDS (
    PROCESS_ID VARCHAR NOT NULL,
    PRIMARY KEY (PROCESS_ID)
);
INSERT INTO PROCESS_IDS VALUES ('STEP1'), ('STEP2'), ('STEP3'), ('STEP4'), ('STEP5');
CREATE TABLE PROCESS_LOG (
    SESSION_ID VARCHAR NOT NULL,
    PROCESS_ID VARCHAR NOT NULL,
    USER_ID VARCHAR NOT NULL,
    EX_TIMESTAMP VARCHAR NOT NULL,
    PRIMARY KEY (SESSION_ID, PROCESS_ID)
);
WITH RECURSIVE FLAGS(FLAG) AS (
    SELECT        1 AS FLAG
    UNION ALL
    SELECT FLAG + 1 AS FLAG FROM FLAGS WHERE FLAG < 31
), PERMUTATIONS AS (
    SELECT
        ROW_NUMBER() OVER (ORDER BY
            A.PROCESS_ID,
            B.PROCESS_ID,
            C.PROCESS_ID,
            D.PROCESS_ID,
            E.PROCESS_ID
        ) AS ROWID,
        A.PROCESS_ID AS A_ID,
        B.PROCESS_ID AS B_ID,
        C.PROCESS_ID AS C_ID,
        D.PROCESS_ID AS D_ID,
        E.PROCESS_ID AS E_ID,
        FLAG
    FROM FLAGS
    CROSS JOIN PROCESS_IDS AS A
    CROSS JOIN PROCESS_IDS AS B
    CROSS JOIN PROCESS_IDS AS C
    CROSS JOIN PROCESS_IDS AS D
    CROSS JOIN PROCESS_IDS AS E
    WHERE
        A.PROCESS_ID <> B.PROCESS_ID AND
        A.PROCESS_ID <> C.PROCESS_ID AND
        A.PROCESS_ID <> D.PROCESS_ID AND
        A.PROCESS_ID <> E.PROCESS_ID AND
        B.PROCESS_ID <> C.PROCESS_ID AND
        B.PROCESS_ID <> D.PROCESS_ID AND
        B.PROCESS_ID <> E.PROCESS_ID AND
        C.PROCESS_ID <> D.PROCESS_ID AND
        C.PROCESS_ID <> E.PROCESS_ID AND
        D.PROCESS_ID <> E.PROCESS_ID
)
INSERT INTO PROCESS_LOG
SELECT
    'a' || FORMAT('%04d', ROWID) AS SESSION_ID,
    A_ID AS PROCESS_ID,
    '100' AS USER_ID,
    '2022-04-12 00:01:00' AS EX_TIMESTAMP
FROM PERMUTATIONS WHERE FLAG & 1 > 0
UNION ALL
SELECT
    'a' || FORMAT('%04d', ROWID) AS SESSION_ID,
    B_ID AS PROCESS_ID,
    '100' AS USER_ID,
    '2022-04-12 00:02:00' AS EX_TIMESTAMP
FROM PERMUTATIONS WHERE FLAG & 2 > 0
UNION ALL
SELECT
    'a' || FORMAT('%04d', ROWID) AS SESSION_ID,
    C_ID AS PROCESS_ID,
    '100' AS USER_ID,
    '2022-04-12 00:03:00' AS EX_TIMESTAMP
FROM PERMUTATIONS WHERE FLAG & 4 > 0
UNION ALL
SELECT
    'a' || FORMAT('%04d', ROWID) AS SESSION_ID,
    D_ID AS PROCESS_ID,
    '100' AS USER_ID,
    '2022-04-12 00:04:00' AS EX_TIMESTAMP
FROM PERMUTATIONS WHERE FLAG & 8 > 0
UNION ALL
SELECT
    'a' || FORMAT('%04d', ROWID) AS SESSION_ID,
    E_ID AS PROCESS_ID,
    '100' AS USER_ID,
    '2022-04-12 00:05:00' AS EX_TIMESTAMP
FROM PERMUTATIONS WHERE FLAG & 16 > 0;
SQL
echo $'\n.read 01_response.sql' | tee -a /dev/stderr | sqlite3 test.db
echo $'\n.read 02_solution.sql' | tee -a /dev/stderr | sqlite3 test.db
for attempt in $(seq -w 1 10)
do
    echo $'\n'$attempt
    echo $'\nDELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1' | tee -a /dev/stderr | sqlite3 test.db
    echo $'\n.read 01_response.sql' | tee -a /dev/stderr | sqlite3 test.db
    echo $'\n.read 02_solution.sql' | tee -a /dev/stderr | sqlite3 test.db
done
rm test.db

# .read 01_response.sql
# STEP1|744
# STEP2|156
# STEP3|32
# STEP4|6
# STEP5|1

# .read 02_solution.sql
# STEP1|744
# STEP2|156
# STEP3|32
# STEP4|6
# STEP5|1

# 01

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|734
# STEP2|155
# STEP3|32
# STEP4|3
# STEP5|1

# .read 02_solution.sql
# STEP1|734
# STEP2|155
# STEP3|32
# STEP4|3
# STEP5|1

# 02

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|721
# STEP2|144
# STEP3|25
# STEP4|2
# STEP5|0

# .read 02_solution.sql
# STEP1|721
# STEP2|144
# STEP3|25
# STEP4|2
# STEP5|0

# 03

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|688
# STEP2|127
# STEP3|21
# STEP4|1
# STEP5|0

# .read 02_solution.sql
# STEP1|688
# STEP2|127
# STEP3|21
# STEP4|1
# STEP5|0

# 04

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|645
# STEP2|104
# STEP3|16
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|645
# STEP2|104
# STEP3|16
# STEP4|0
# STEP5|0

# 05

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|633
# STEP2|94
# STEP3|8
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|633
# STEP2|94
# STEP3|8
# STEP4|0
# STEP5|0

# 06

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|611
# STEP2|78
# STEP3|8
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|611
# STEP2|78
# STEP3|8
# STEP4|0
# STEP5|0

# 07

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|579
# STEP2|68
# STEP3|4
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|579
# STEP2|68
# STEP3|4
# STEP4|0
# STEP5|0

# 08

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|544
# STEP2|55
# STEP3|1
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|544
# STEP2|55
# STEP3|1
# STEP4|0
# STEP5|0

# 09

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|505
# STEP2|51
# STEP3|1
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|505
# STEP2|51
# STEP3|1
# STEP4|0
# STEP5|0

# 10

# DELETE FROM PROCESS_LOG WHERE ABS(RANDOM()) % 10 < 1

# .read 01_response.sql
# STEP1|477
# STEP2|41
# STEP3|1
# STEP4|0
# STEP5|0

# .read 02_solution.sql
# STEP1|477
# STEP2|41
# STEP3|1
# STEP4|0
# STEP5|0
